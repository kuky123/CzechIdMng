{
  "module": {
    "name": "Account management",
    "author": "BCV solutions s.r.o."
  },
  "navigation" : {
    "menu" : {
    }
  },
  "component" : {
    "advanced": {
      "EavForm": {
        "faceType": {
          "SYSTEM-SELECT": "System select (SelectBox)"
        }
      }
    }
  },
  "content": {
    "dashboard": {
    },
    "systems": {
      "header": "Systems",
      "title": "$t(acc:content.systems.header)"
    },
    "schema": {

    },
    "system": {
      "detail" : {
        "header": "Connected system",
        "title": "$t(acc:content.system.detail.header)",
        "edit": {
          "title": "System details",
          "header": "{{name}} <small>System details</small>"
        },
        "create": {
          "header": "New system"
        },
        "save": {
          "success": "System [{{name}}] was successfully saved"
        },
        "loadRemoteConnectors": "Load connector from remote server",
        "remoteConnectorServer": "Remote connector server",
        "basic": "Basic information",
        "blockedOperationInfo": "Warning: on system are blocked some operations [{{operations}}]!"
      },
      "entities": {
        "header": "Entities in system <small>managed in IdM</small>",
        "title": "Entities",
        "edit": {
          "header": "Entity details in system"
        },
        "create": {
          "header": "New entity in system"
        },
        "save": {
          "success": "Entity [{{name}}] in system was successfully saved"
        },
        "filter": {
          "text": {
            "label": "Identifier",
            "placeholder": "$t(acc:entity.SystemEntity.uid)"
          }
        }
      },
      "schemaObjectClasses": {
        "header": "System scheme",
        "title": "Scheme",
        "schemaObjectClassesHeader": "Object types in system",
        "generateSchemaBtn": "Generate scheme",
        "generateSchemaBtnTooltip": "Generates and saves system scheme. Scheme is obtained from connector used by current configuration. When generating scheme, if object or attribute with the same name is found, it will be replaced by the current value in system. Other objects and attributes will remain unchanged.",
        "edit": {
          "header": "Object type details in system"
        },
        "create": {
          "success": "Object type [{{name}}] in system was ",
          "header": "New type of object in system"
        },
        "save": {
          "success": "Object type [{{name}}] in system was successfully saved"
        },
        "filter": {
          "objectClassName": {
            "label": "Object name",
            "placeholder": "Object name in system"
          }
        },
        "action": {
          "generateSchema": {
            "message": "<b>Generate and save scheme in this system.</b> Scheme will be obtained from connector based on current configuration.<br/>If there will be object or attribute with the same name, it will be replaced (regenerated by state on end system). Other objects and attributes will remain unchanged. <br/><br/><b>Do you really want to start schema generating / recovery?</b>",
            "header": "Generate scheme",
            "success": "Generation of scheme for system '{{name}}' successful."
          }
        }
      },
      "systemSynchronizationConfigs": {
        "header": "Synchronization<small> configuration</small>",
        "title": "Synchronization",
        "startSynchronization": "Start synchronization",
        "edit": {
          "header": "Synchronization configuration details"
        },
        "create": {
          "success": "Configuration  of synchronization [{{name}}] successfully created",
          "header": "New configuration of synchronization"
        },
        "save": {
          "success": "Configuration of synchronization [{{name}}] successfully saved"
        },
        "action": {
          "startSynchronization": {
            "message": "<b>Do you really want to start synchronization/reconciliation '{{name}}' manually?</b>",
            "header": "Start synchronization manually",
            "started": "Synchronization/reconciliation '{{name}}' started as long running task, results will be shown on synchronization detail or in long running task agenda.",
            "success": "Synchronization/reconciliation '{{name}}' finished"
          },
          "cancelSynchronization": {
            "message": "<b>Do you really want to stop synchronization/reconciliation '{{name}}'?</b>",
            "header": "Cancel synchronization manually",
            "canceled": "Synchronization/reconciliation '{{name}}' canceled."
          }
        },
        "button": {
          "start": "Start synchronization/reconciliation",
          "cancel": "Cancel synchronization/reconciliation"
        }
      },
      "systemSynchronizationConfigDetail": {
        "header": "Synchronization details",
        "title": "Synchronization details",
        "synchronizationLogsHeader": "Synchronization logs",
        "situationActionsAndWf": "In section below, it is possible to define how synchronization will react in given situations. Synchronization behavior is affected by selected workflow. Workflow is started after execution of standard action for each element. Workflow must ensure changes are saved.",
        "situationAction": "Action",
        "situationActionWf": "Workflow",
        "customFilterInfo": "Custom filter can be defined by selection of attribute (Filter by attribute) by which we want to find relevant operations (Filtering operations). More complicated criteria can be defined in section below.",
        "treeInfo": "Synchronization of Tree is always execute as reconciliation.",
        "edit": {
          "header": "Synchronization configuration details "
        },
        "create": {
          "success": "Configuration of  synchronization [{{name}}] was successfully created",
          "header": "New configuration of synchronization "
        },
        "save": {
          "success": "Configuration of synchronization [{{name}}] was successfully saved"
        },
        "button": {
          "saveAndStartSynchronization": "Save and run sync"
        },
        "help": {
          "header": "Define a custom synchronization filter",
          "body": "You can define a custom filter simply by selecting the <strong> Filter by attribute </strong> attribute according to which we want to search and the corresponding operations (<strong> Filter operations </strong>). <br /> <br /> If you need to create a more complex filtering criterion, you can use this script. <br /> The example below shows the situation where we want to filter by the selected attribute and operation (it enters the script as <strong > filter </strong>), but we want to limit the results to another condition. In this case, so that all results must have the attribute \"<strong>lastname</strong> \" (by schema) equal to \"<strong>Doe</strong>\". <br /> <br /> <pre> import eu.bcvsolutions.idm.ic.filter.impl.IcFilterBuilder; <br /> import eu.bcvsolutions.idm.ic.api.IcAttribute; <br /> import eu.bcvsolutions.idm.ic.impl.IcAttributeImpl; <br /> <br /> IcAttribute attr = new IcAttributeImpl (\"lastname\", \"Doe\"); <br /> <br /> return IcFilterBuilder.and ( filter, IcFilterBuilder.equalTo (attr)); </pre> <h2> IcFilterBuilder provides operations </h2> <ul> <li>IcFilterBuilder.equalTo(...)</li> <li>IcFilterBuilder.contains(...)</li> <li>IcFilterBuilder.startsWith(...)</li> <li>IcFilterBuilder.endsWith(...)</li> <li>IcFilterBuilder.or(...)</li> <li>IcFilterBuilder.and(...)</li> <li>IcFilterBuilder.not(...)</li> </ul> <div> The output of this script must be <strong>IcFilter</strong>. If <strong>null</strong> is output, then the filter will not be applied and synchronization will be run over all accounts. </div>"
        },
        "tabs": {
          "basicConfiguration": {
            "label": "Settings"
          },
          "filterConfiguration": {
            "label": "Filter"
          },
          "specificConfiguration": {
            "label": "Specific settings"
          },
          "logs": {
            "label": "Logs"
          }
        },
        "contractConfigDetail":{
          "defaultTreeType": {
            "label": "Default type of structure",
            "helpBlock": "Relations will be assigned (searched) for positions within the selected structure."
          },
          "defaultTreeNode": {
            "label": "Default position in structure",
            "helpBlock": "If the position for a given relation is not filled in the source system, then this will be used as the default."
          },
          "defaultLeader": {
            "label": "Default leader",
            "helpBlock": "If the none leader for a given relation is filled in the source system, then this will be used as the default."
          },
          "startOfHrProcesses": {
            "label": "After end, start the HR processes",
            "helpBlock": "After successful synchronization, HR processes will be executed."
          },
          "startAutoRoleRec": {
            "label": "After end, start the automatic role recalculation",
            "helpBlock": "After successful synchronization will be start recalculation of all automatic role by attribute."
          }
        },
        "identityConfigDetail":{
          "defaultRole": {
            "label": "Default role",
            "helpBlock": "If the synchronization creates a link between an identity and an account, this role will be assigned to the identity. This assignment will be linked to the main contractual relationship of the identity."
          },
          "startAutoRoleRec": {
            "label": "After end, start the automatic role recalculation",
            "helpBlock": "After successful synchronization will be start recalculation of all automatic role by attribute."
          },
          "createDefaultContract": {
            "label": "Create default contracts for new identities",
            "helpBlock": "During the creation of new identities, will be also created default contract. For create new default contract must be enabled function 'Creating default contracts' in application configuration."
          }
        }
      },
      "systemSynchronizationLogDetail": {
        "header": "Synchronization log details",
        "title": "Synchronization log details",
        "syncActionLogsHeader": "Synchronization actions logs"
      },
      "systemSyncActionLogDetail": {
        "header": "Action log details",
        "title": "Action log details",
        "syncItemLogsHeader": "Synchronization items logs",
        "filter": {
          "displayName": {
            "label": "Name",
            "placeholder": "Finds logs containing value in name."
          }
        }
      },
      "SystemSyncItemLogDetail": {
        "header": "Item log details",
        "title": "Item log details"
      },
      "accounts": {
        "header": "Accounts in system <small>managed in IdM</small>",
        "title": "Accounts",
        "edit": {
          "header": "Account details in system"
        },
        "create": {
          "header": "New account on end system"
        },
        "save": {
          "success": "Account in system was successfully created"
        },
        "filter": {
          "text": {
            "label": "Identifier",
            "placeholder": "$t(acc:entity.SystemEntity.uid)"
          }
        }
      },
      "connector": {
        "header": "Connector configuration",
        "title": "Configuration",
        "button": {
          "showBasicInfo": "Show basic information",
          "checkSystem": "Test connector",
          "checkSystemTooltip": "Saves current settings and requires test on connector.",
          "loadConnectorDefinition": "Load definition of connector"
        },
        "save": {
          "success": "Connector configuration for system [{{name}}] successfully saved."
        },
        "checkSystem": {
          "success": "Connector test successful.",
          "error": "Connector test failed"
        },
        "action": {
          "changeConnector": {
            "message": "<b>Immediate save of system with new connector.</b><br/> Current connector will no longer be active and its configuration will be lost.<br/><br/><b>Do you really want to change connector and save system?</b>",
            "header": "Change of connector"
          }
        }
      },
      "objectClassDetail": {
        "title": "Object in system",
        "objectClassHeader": "Object in system",
        "schemaAttributesHeader": "Scheme attributes",
        "edit": {
          "header": "Object type details in system"
        },
        "create": {
          "header": "New object type in system"
        },
        "save": {
          "success": "Object type [{{name}}] in system successfully saved"
        },
        "filter": {
          "name": {
            "label": "Attribute name",
            "placeholder": "Attribute name in scheme"
          }
        }
      },
      "mappings": {
        "header": "Attributes mapping<small> attribute groups for operation and entity type</small>",
        "title": "Mapping",
        "edit": {
          "header": "Mapping details of entities and operations"
        },
        "create": {
          "success": "Mapping for entity type [{{name}}] successfully created",
          "header": "New mapping for entity and operation"
        },
        "save": {
          "success": "Mapping for entity type [{{name}}] successfully saved"
        }
      },
      "mappingDetail": {
        "title" :"Detail",
        "header": "Mapping of attributes <small>for IdM entity and operation type</small>",
        "systemAttributesMappingHeader": "Mapped attributes",
        "edit": {
          "header": "Details of IdM entity type and operation"
        },
        "create": {
          "header": "New type of IdM entity and operation",
          "success": "IdM entity type [{{entityType}}] for operation [{{operationType}}] successfully created"
        },
        "save": {
          "success": "IdM entity type [{{entityType}}] for operation [{{operationType}}] successfully saved"
        },
        "filter": {
          "idmPropertyName": {
            "label": "Name of IdM attribute",
            "placeholder": "Name of attribute in IdM"
          }
        },
        "protectionEnabled": {
          "help": "Enables account protection before deletion. When trying to remove an IdM account (last relation assigning this account), it will be marked as 'Is protected'. Such an account will not be deleted or provisioned. To really delete the IdM account (and thus the account on the end system), it will occur after the expiration of the protection interval. Deleting performs a scheduled task."
        },
        "validation":{
          "systemMissingIdentifier":{
            "message": "Beware: None of mapped attributes are marked as identifier.",
            "info": "When there is not any identifier, then a role assigned to this system cannot be assigned to any identity."
            },
          "systemMissingOwner":{
            "message":  "Beware: The contractual relationship should have the attribute mapping the 'Owner' field.",
            "info": ""
          }
        }
      },
      "attributeDetail": {
        "title" : "Attribute in schema",
        "header" : "Attribute details",
        "returnedByDefaultTooltip": "Attribute contained in result of account search. This is not applied, for example, to password attribute, which is not returned in result by default",
        "save": {
          "success": "Attribute [{{name}}] successfully saved"
        },
        "create": {
          "success": "Attribute [{{name}}] successfully created",
          "header": "New system attribute"
        }
      },
      "attributeMappingDetail": {
        "title" : "Attribute in IdM",
        "header" : "Attribute mapping details",
        "alertNoRepository": "Attribute is not mapped to any entity in CzechIdM or extended attribute. Output will be a constant from 'Transformation to system'",
        "infoPasswordMapping": "If attribute __PASSWORD__ is equal to value NULL, it will be automatically generated from password policy for system.",
        "save": {
          "success": "Attribute [{{name}}] of IdM successfully saved"
        },
        "create": {
          "success": "IdM attribute [{{name}}] successfully created",
          "header": "New IdM attribute"
        }
      },
      "roles": {
        "title" : "Roles",
        "header" : "Roles <small>Role assigns account in systems</small>"
      }
    },
    "role": {
      "systems": {
        "header": "$t(acc:content.systems.header) <small>$t(acc:entity.RoleSystem._type)</small>",
        "title": "$t(acc:content.systems.header)",
        "edit": {
          "header": "System details for role"
        },
        "create": {
          "header": "New system for role"
        },
        "save": {
          "success": "System [{{system}}] for role {{role}} successfully saved"
        },
        "filter": {
          "system": {
            "label": "System",
            "placeholder": "System"
          },
          "role": {
            "label": "Role",
            "placeholder": "Role"
          }
        }
      },
      "roleSystemDetail": {
        "header": "Connected system",
        "title": "Connected system",
        "roleSystemAttributesHeader": "Attributes mapped within role",
        "systemMapping": {
          "systemPlaceholder": "Select system first ..."
        },
        "create": {
          "success": "Connection of system successfully created"
        },
        "save": {
          "success": "Connection of system successfully edited"
        }
      },
      "roleSystemAttributeDetail": {
        "header": "Mapping of system attribute",
        "title": "Mapping of system attribute",
        "create": {
          "success": "Attribute [{{name}}] for role successfully created"
        },
        "save": {
          "success": "Attribute [{{name}}] for role successfully edited"
        }
      },
      "accounts": {
        "header": "Accounts in systems",
        "title": "Accounts",
        "edit": {
          "header": "Account details in system"
        },
        "create": {
          "header": "New account in system"
        },
        "save": {
          "success": "Account in system successfully saved"
        },
        "filter": {
          "uid": {
            "label": "Identificator",
            "placeholder": "$t(acc:entity.SystemEntity.uid)"
          }
        }
      }
    },
    "roleCatalogue": {
      "accounts": {
        "header": "Accounts in system",
        "title": "Accounts",
        "edit": {
          "header": "Account details in system"
        },
        "create": {
          "header": "New account in system"
        },
        "save": {
          "success": "Account in system successfully saved"
        },
        "filter": {
          "uid": {
            "label": "Identificator",
            "placeholder": "$t(acc:entity.SystemEntity.uid)"
          }
        }
      }
    },
    "identity": {
      "accounts": {
        "header": "Accounts in systems",
        "identity-accounts":"Links to accounts",
        "title": "Accounts",
        "edit": {
          "header": "Account details in system"
        },
        "create": {
          "header": "New account in system"
        },
        "save": {
          "success": "Account in system successfully saved"
        },
        "filter": {
          "uid": {
            "label": "Identifier",
            "placeholder": "$t(acc:entity.SystemEntity.uid)"
          }
        }
      }
    },
    "contract": {
      "accounts": {
        "header": "Accounts in system",
        "title": "Accounts",
        "edit": {
          "header": "Account details in system"
        },
        "create": {
          "header": "New account in system"
        },
        "save": {
          "success": "Account in system successfully saved"
        },
        "filter": {
          "uid": {
            "label": "Identifier",
            "placeholder": "$t(acc:entity.SystemEntity.uid)"
          }
        }
      }
    },
    "contract-slice": {
      "accounts": {
        "header": "Accounts in system",
        "title": "Accounts",
        "edit": {
          "header": "Account details in system"
        },
        "create": {
          "header": "New account in system"
        },
        "save": {
          "success": "Account in system successfully saved"
        },
        "filter": {
          "uid": {
            "label": "Identifier",
            "placeholder": "$t(acc:entity.SystemEntity.uid)"
          }
        }
      }
    },
    "provisioningOperations": {
      "label": "Provisioning",
      "title" : "Provisioning - operations log",
      "header" : "Provisioning <small> operations log</small>",
      "action": {
        "retry": {
          "action": "Retry operation",
          "button": {
            "selected": "Retry selected",
            "batch": "Retry full batch"
          },
          "header": "Retry operation",
          "header_plural": "Retry operations",
          "message": "Retry only selected operation <strong>{{name}}</strong>. Only selected operation will be executed regardless of other records in queue. Sequence of operations may not be followed.",
          "message_plural": "Retry only <strong>{{count}}</strong> selected operations. Only selected operation will be executed regardless of other records in queue. Sequence of operations may not be followed.",
          "batchMessage": "Retry all operations for selected entity <strong>{{name}}</strong> in queue. All operations for selected entity will be sent to system. Sequence sorted as per time of entering queue. Final state of entity in system will be retained",
          "batchMessage_plural": "Retry all operations for selected entity by <strong>{{count}}</strong> selected operations in queue. All operations for selected entities will be sent to system. Sequence sorted as per time of entering queue. Final state of entities in system will be retained",
          "error": "Error while retrying operation {{name}}",
          "success": "Retrying of provisioning operations has been started."
        },
        "cancel": {
          "action": "Cancel operation",
          "button": {
            "selected": "Cancel only selected",
            "batch": "Cancel full batch"
          },
          "header": "Cancel provisioning operation",
          "header_plural": "Cancel provisioning operations",
          "message": "Or do you want to cancel just selected operation <strong>{{name}}</strong>?",
          "message_plural": "Or do you want to cancel just <strong>{{count}}</strong> selected operations?",
          "batchMessage": "Do you want to cancel all operations for entity <strong>{{name}}</strong> in queue?",
          "batchMessage_plural": "Do you want to cancel all operations for entity <strong>{{count}}</strong> in queue?",
          "error": "Error while canceling operation {{name}} ",
          "success": "Operations for provisioning were canceled."
        },
        "cancelAll": {
          "button": {
            "label": "Cancel all operations",
            "title": "Cancel all operations from provisioning queue of filtered records"
          },
          "header": "Cancel operations from provisioning queue",
          "message": "Do you want to cancel all operations from provisioning queue of filtered records? All operations for filtered entities will be canceled.",
          "accepted": "Long running task, which will cancel operations from provisioning queue, was started."
        }
      },
      "tabs": {
        "active": {
          "label": "Active operations"
        },
        "archive": {
          "label": "Archive"
        }
      },
      "detail": {
        "header": "Operation details",
        "result": "Result",
        "accountObject": "Attributes in IdM",
        "connectorObject": "Attributes for provisioning",
        "resultCode": "Code",
        "nextAttempt": {
          "header": "Next attempt",
          "label": "<strong>Attempt:</strong> {{currentAttempt}} / {{maxAttempts}}, Next attempt will start <strong>{{nextAttempt}}</strong>"
        }
      },
      "filter": {
        "dateFrom": {
          "label": "From",
          "placeholder": "Date from"
        },
        "dateTill": {
          "label": "To",
          "placeholder": "Date to"
        }
      }
    },
    "provisioningBreakConfig": {
      "title" : "Provisioning brake",
      "header" : "Provisioning brake",
      "save": {
        "success": "Provisioning brake successfully saved"
      },
      "create": {
        "success": "Provisioning brake successfully created"
      },
      "recipientInfo": "You can add the recipients only after the brake has been created.",
      "removeFailture": "No configurations have been removed.",
      "action": {
        "delete": {
          "message": "Do you want to remove selected record [<strong>{{record}}</strong>]?<br /><br /><i>Global configurations will be removed from the list of deleted.</i>",
          "message_plural": "Selected records: [<strong>{{records}}</strong>].<br /><br /> Do you want to remove <strong>{{count}}</strong> selected records?<br /><br /><i>Global configurations will be removed from the list of deleted."
        }
      }
    },
    "provisioningBreakConfigRecipient": {
      "title": "Recipients",
      "new": "Create new recipient",
      "edit": "Edit recipient",
      "save": {
        "success": "Recipient successfully saved"
      },
      "create": {
        "success": "Recipient successfully created"
      }
    },
    "systemRoles": {
      "title" : "Roles",
      "header": "Roles <small>connected roles</small>"
    },
    "passwordPolicy": {
    "system": {
      "tab": "Systems",
      "title": "Systems utilizing this policy"
    }
  }
},
"entity": {
  "System": {
    "_type": "System",
    "name": "System name",
    "blockedOperation": "Blocked operations",
    "disabled": "Inactive",
    "description": "Description",
    "virtual": "Virtual",
    "passwordPolicyValidate": "Password policy for validation",
    "passwordPolicyGenerate": "Password policy for generating",
    "readonly": {
      "label": "Read-only",
      "help": "Active provisioning operations create, update and delete, will not be executed."
    },
      "queue": {
        "label": "Asynchronous provisioning",
        "help": "Active provisioning operations (create, update, delete), will run through the queue asynchronously. Change password operation will be still synchronous. Queue processing interval is configurable by long running task (ProvisioningQueueTaskExecutor)."
      },
      "connectorKey": {
        "_type": "Connector",
        "framework": "Framework",
        "connectorName": "Connector type",
        "bundleName": "Connector bundle",
        "bundleVersion": "Connector version"
      },
      "remoteConnector": {
        "label": "Use remote connector server",
        "help": "After check, local connectors will not be used."
      },
      "connectorHost": "Server with connectors"
    },
    "ConnectorServer": {
      "name": "Name",
      "chooseConnectorServer": "Choose remote connector server",
      "host": "Host",
      "port": "Port",
      "password": "Password",
      "timeout": "Timeout",
      "useSsl": "SSL"
    },
    "BlockedOperation": {
      "createOperation": {
        "label": "Block create operation",
        "help": "All creation operations will be blocked",
        "short": "Create"
      },
      "updateOperation": {
        "label": "Block edit operation",
        "help": "All editing operations will be blocked",
        "short": "Update"
      },
      "deleteOperation": {
        "label": "Block delete operation",
        "help": "All deletion operations will be blocked",
        "short": "Delete"
      }
    },
    "RoleSystem": {
      "_type": "Role assigns account in systems",
      "type": "Assign type",
      "role": "Role",
      "system": "System",
      "systemMapping": "Mapping",
      "forwardAccountManagemen": {
        "label": "Forward account management",
        "help": "If checked, then an account on this system is created even though the assignment of this role to the user will be valid in the future."
      }
    },
    "SystemEntity": {
      "_type": "Entity in system",
      "entityType": "Entity type",
      "uid": "Identifier in system",
      "system": "Connected system",
      "wish": {
        "label": "Wish",
        "help": "If <strong>wish</strong> is checked, then IdM doesn't know about entity on target system yet (not provisioned or linked)."
      },
      "attributes": "Attributes on the target system"
    },
    "SchemaObjectClass": {
      "auxiliary": "Auxiliary",
      "container": "Container",
      "objectClassName": "Object name",
      "system": "System name"
    },
    "SystemMapping": {
      "_type": "Mapping attributes in system",
      "name": "Mapping name",
      "entityType": "Entity type",
      "operationType": "Operation type",
      "system": "System",
      "objectClass": "Object name",
      "treeType": "Tree type",
      "protectionEnabled": "Account protection (before delete)",
      "protectionInterval": "Length of protection interval (in days)",
      "account-management": "Account management",
      "canBeAccountCreatedScript": {
        "label": "Can an account be created?",
        "help": "Account Management - allows you to disable the account creation (for that entity) on this system. The input parameter of this Groovy script is IdM entity 'entity', generated account identifier 'uid' and IdM system 'system'. Output value must be Boolean.TRUE or Boolean.FALSE!"
      }
    },
    "SchemaAttribute": {
      "name": "Name",
      "objectClass": "Attribute belongs to object",
      "classType": "Data type",
      "required": "Required",
      "readable": "able to read",
      "createable": "able to create",
      "updateable": "able to edit",
      "returned_by_default": "Returned by default",
      "nativeName": "Native name",
      "system": "Connected system",
      "multivalued": "Multivalued"
    },
    "SystemAttributeMapping": {
      "name": {
        "label": "Name",
        "help": "User-defined name of the attribute"
      },
      "idmPropertyName": {
        "label": "IdM key",
        "help": "Name of entity attr., name of extended attr., or key to confidential storage."
      },
      "transformToResourceScriptSelectBox": {
        "label": "Available scripts for transformation to resource",
        "help": "After script selection, will be automatically insert code which calls selected script including sample parameters."
      },
      "transformFromResourceScriptSelectBox": {
        "label": "Available scripts for transformation from resource",
        "help": "After script selection, will be automatically insert code which calls selected script including sample parameters."
      },
      "idmPropertyEnum": "Entity field",
      "schemaAttribute": "Attribute in schema",
      "systemMapping": "Mapping name",
      "extendedAttribute": {
        "label": "Extended attr.",
        "help": "<strong>Main form definition</strong> is supported only."
      },
      "confidentialAttribute": "Confidential attr.",
      "entityAttribute": "Entity attr.",
      "strategyType": "Strategy",
      "transformationFromResource": "Transform from system",
      "transformationToResource": "Transform to system",
      "transformFromResourceScript": {
        "label": "Transformation from system",
        "help": "Allows value to be transformed from system into a form suitable for CzechIdM. Input parameters of this Groovy script are value of the attribute 'attributeValue' and list 'icAttributes' of object attributes in system."
      },
      "authenticationAttribute": {
        "label": "Authentication attr.",
        "help": "Attribute used for authentication on connected system."
      },
      "transformToResourceScript": {
        "label": "Transformation to system",
        "help": "Allows value to be transformed from CzechIdM into a form suitable for connected system. Input parameters of this Groovy script are value of attribute 'attributeValue', IdM entity 'entity' and account identifier 'uid'. If output value is empty, system automatically uses available account identifier (uid)."
      },
      "uid": {
        "label": "Identifier",
          "tooltip": "Attribute is unique identifier of object."
      },
      "sendOnlyIfNotNull": {
        "label": "Send IdM value only if its not null",
        "tooltip": "Value for this attribute (computed by CzechIdM), will be sent on target system only if value is not null."
      },
      "sendAlways": {
        "label": "Send always",
        "tooltip": "Value for this attribute will be always send on target system. Even if is not changed."
      },
      "disabledAttribute": {
        "label": "Disabled",
        "tooltip": "Disabled attribute will not be used in provisioning in default state. It can still be overload and activated in roles."
      },
      "cached": {
        "label": "The value is cached",
        "help": "The attribute value will be saved and read from the cache. At this moment, it is used only <strong>in sync</strong>. The key is this attribute and attributes from the end system (IcAttribute). The value is the transformed value from the end system."
      },
      "sendOnPasswordChange": {
        "label": "Include on password change",
        "help": "Send this attribute into provisioning, when password is changed."
      }
    },
    "RoleSystemAttribute": {
      "name": {
        "label": "Name",
        "help": "User-defined name of this system attribute, overloaded by the role."
      },
      "systemAttributeMapping": "Attribute in system",
      "roleSystem": "Belongs to role and system",
      "strategyType": "Strategy",
      "disabledDefaultAttribute": "Disable",
      "disabledDefaultAttributeTooltip": "If checked, attribute will never be send to system. Even if the attribute has default mapping.",
      "transformScriptTable": "Transformation",
      "transformScript": {
        "label": "Transformation to system",
        "help": "Allows to transform value from CzechIdM to state intended for connected system. Input parameters of this Groovy script are attribute value 'attributeValue', IdM entity 'entity' and account identifier 'uid'. If script output value is null, than returning value is available account identifier (uid)."
      }
    },
   "Account": {
    "_type": "Account in system",
    "accountType": "Account type",
    "system": "System",
    "systemEntity": "Entity (system)",
    "uid": "Account identifier",
    "inProtection": "Is protected from delete",
    "endOfProtection": "Protected until",
    "targetEntity": "Entity (IdM)"
  },
    "IdentityAccount": {
      "_type": "Identity account in system",
      "ownership": "Owns account",
      "role": "Assigned by role"
    },
    "SynchronizationConfig": {
      "enabled": "Allowed",
      "name": "Name",
      "description": "Description",
      "runOnServer": "Run on server",
      "running": "Running",
      "customFilter" :{
        "label": "Use custom filter",
        "help": "Synchronization will be managed by custom filter defined below. When not selected, synchronization is managed by connector mechanisms. The filter is NOT used during reconciliation."
      },
      "filterAttribute" :{
        "label": "Filter by attribute",
        "help": "This attribute (with type of filter operation) will be used as default filter criteria for synchronization. Other criteria can be defined in filter script."
      },
      "tokenAttribute" :{
        "label": "Token attribute",
        "help": "Specifies token of synchronising attribute."
      },
      "token": "Token",
      "timestamp": "Timestamp",
      "filterOperation": "Filter operation",
      "customFilterScript": {
        "label": "Custom filter",
        "help": "This Groovy script sets own search filter for accounts in system to be synchronized."
      },
      "rootsFilterScript": {
        "label": "Definition of tree roots",
        "help": "This Groovy script sets definition of tree root. Script input is 'account' (IcObject). Output must be Boolean ('true' for root). Without script implementation, every element without parent is consider as root."
      },
      "reconciliation": {
        "label": "Reconciliation",
        "help": "Executes full reconciliation instead of synchronization. Synchronization will be executed for all accounts without filter. Search for missing accounts will be executed for all entities in CzechIdM."
      },
      "correlationAttribute": "Correlation attribute",
      "systemMapping": "Set of mapped attributes",
      "linkedAction": "Linked",
      "unlinkedAction": "Not linked",
      "missingEntityAction": "Missing entity",
      "missingAccountAction": "Missing account"
    },
    "SynchronizationLog": {
      "running": "Running",
      "started": "Started",
      "ended": "Finished",
      "token": "Token",
      "results": "Results",
      "containsError": "Contains errors",
      "actions": {
        "SUCCESS": {
          "CREATE_ENTITY": "Created entities",
          "UPDATE_ENTITY": "Updated entities",
          "DELETE_ENTITY": "Deleted entities",
          "LINK_AND_UPDATE_ENTITY": "Created accounts and updated entities",
          "LINK_AND_UPDATE_ACCOUNT": "Created and updated accounts",
          "UNLINK_AND_REMOVE_ROLE": "Deleted links with role",
          "LINK": "Created links",
          "UNLINK": "Deleted links",
          "CREATE_ACCOUNT": "Created accounts",
          "UPDATE_ACCOUNT": "Updated accounts",
          "LINKED": "Linked",
          "MISSING_ENTITY": "Missing entity",
          "UNLINKED": "Not linked",
          "MISSING_ACCOUNT": "Missing account",
          "IGNORE": "Ignore",
          "UNKNOWN": "Unknown state"
        },
        "WARNING": {
          "CREATE_ENTITY": "Created entities",
          "UPDATE_ENTITY": "Updated entities",
          "DELETE_ENTITY": "Deleted entities",
          "LINK_AND_UPDATE_ENTITY": "Created accounts and updated entities",
          "LINK_AND_UPDATE_ACCOUNT": "Created and updated accounts",
          "UNLINK_AND_REMOVE_ROLE": "Deleted links with roles",
          "LINK": "Created links",
          "UNLINK": "Deleted links",
          "CREATE_ACCOUNT": "Created accounts",
          "UPDATE_ACCOUNT": "Updated accounts",
          "LINKED": "Linked accounts",
          "MISSING_ENTITY": "Missing entity",
          "UNLINKED": "Not linked",
          "MISSING_ACCOUNT": "Missing account",
          "IGNORE": "Ignored",
          "UNKNOWN": "Unknown state"
        },
        "WF": {
          "CREATE_ENTITY": "Created entities",
          "UPDATE_ENTITY": "Updated entities",
          "DELETE_ENTITY": "Deleted entities",
          "LINK_AND_UPDATE_ENTITY": "Created accounts and updated entities",
          "LINK_AND_UPDATE_ACCOUNT": "Created and updated accounts",
          "UNLINK_AND_REMOVE_ROLE": "Deleted links with roles",
          "LINK": "Created links",
          "UNLINK": "Deleted links",
          "CREATE_ACCOUNT": "Created accounts",
          "UPDATE_ACCOUNT": "Updated accounts",
          "LINKED": "Linked",
          "MISSING_ENTITY": "Missing entity",
          "UNLINKED": "Not linked",
          "MISSING_ACCOUNT": "Missing account",
          "IGNORE": "Ignored",
          "UNKNOWN": "Unknown state"
        },
        "IGNORE": {
          "CREATE_ENTITY": "Created entities",
          "UPDATE_ENTITY": "Updated entities",
          "DELETE_ENTITY": "Deleted entities",
          "LINK_AND_UPDATE_ENTITY": "Created accounts and updated entities",
          "LINK_AND_UPDATE_ACCOUNT": "Created and updated accounts",
          "UNLINK_AND_REMOVE_ROLE": "Deleted links with roles",
          "LINK": "Created links",
          "UNLINK": "Deleted links",
          "CREATE_ACCOUNT": "Created accounts",
          "UPDATE_ACCOUNT": "Updated accounts",
          "LINKED": "Linked",
          "MISSING_ENTITY": "Missing entity",
          "UNLINKED": "Not linked",
          "MISSING_ACCOUNT": "Missing account",
          "IGNORE": "Ignored",
          "UNKNOWN": "Unknown state"
        },
        "ERROR": {
          "CREATE_ENTITY": "Unsuccessfully created entities",
          "UPDATE_ENTITY": "Unsuccessfully updated entities",
          "DELETE_ENTITY": "Unsuccessfully Deleted entities",
          "LINK_AND_UPDATE_ENTITY": "Unsuccessfully created accounts and updated entities",
          "LINK_AND_UPDATE_ACCOUNT": "Unsuccessfully created and updated accounts",
          "LINK": "Unsuccessfully created links",
          "UNLINK": "Unsuccessfully removed links",
          "UNLINK_AND_REMOVE_ROLE": "Unsuccessfully deleted links with role",
          "CREATE_ACCOUNT": "Unsuccessfully created accounts",
          "UPDATE_ACCOUNT": "Unsuccessfully updated accounts",
          "LINKED": "Linked",
          "MISSING_ENTITY": "Missing entity",
          "UNLINKED": "Not linked",
          "MISSING_ACCOUNT": "Missing account",
          "IGNORE": "Unsuccessfully ignored",
          "UNKNOWN": "Unknown state"
        }
      },
      "statistic": {
        "label": "Statistics",
        "timeDiff": "Duration",
        "allOperations": "Number of operations",
        "itemsPerSec": "Number of operations per 1s"
      }
    },
    "SyncActionLog": {
      "syncAction": "Action",
      "operationResult": "Result",
      "operationCount": "Number of operations"
    },
    "SyncItemLog": {
      "identification": "Identifier",
      "displayName": "Name",
      "message": "Message",
      "type": "Type",
      "log": "Log"
    },
    "ProvisioningOperation": {
      "_type": "Provisioning - operation",
      "creator": "Creator",
      "operationType": "Operation",
      "entityIdentifier": "Entity identifier (IdM)",
      "resultState": "Result",
      "entity": "IdM entity"
    },
    "ProvisioningBreakConfig": {
      "operationType": {
        "label": "Type of blocked operation",
        "help": "The type of operation for which the brake will affect."
      },
      "warningLimit": {
        "label": "Warning limit",
        "help": "Number of operations from which a warning message will be sent."
      },
      "period": {
        "label": "Period [min]",
        "help": "The period by which the limits of operations are calculated. The unit is minutes."
      },
      "disableLimit": {
        "label": "Disable limit",
        "help": "Number of operations from which all subsequent operations will be blocked."
      },
      "warningTemplate": {
        "label": "Warning template",
        "placeholder": "Default template",
        "help": "A message with this template will be sent if the warning limit is exceeded. Otherwise default template will be used, by notification configuration (topic: acc:provisioningBreakWarning)."
      },
      "disableTemplate": {
        "label": "Disable template",
        "placeholder": "Default template",
        "help": "A message with this template will be sent if the block limit is exceeded. Otherwise default template will be used, by notification configuration (topic: acc:provisioningBreakWarning)."
      },
      "actualOperationCount": {
        "label": "Number of processed operations",
        "help": "Number of operations processed for this provisioning brake (from last successful provisioning)."
      },
      "disabled": "Inactive",
      "globalConfiguration": "Global configuration"
    },
    "ProvisioningBreakConfigRecipient": {
      "role": "Recipients with role",
      "identity": "Recipient",
      "type": {
        "label": "Recipient type",
        "role": "Role",
        "identity": "Identity"
      },
      "name": "Recipient"
    }
  },
  "enums" : {
    "SystemEntityTypeEnum": {
      "IDENTITY": "Identity",
      "ROLE": "Role",
      "TREE": "Tree",
      "ROLE_CATALOGUE": "Role catalogue",
      "CONTRACT": "Identity contract",
      "CONTRACT_SLICE": "Contract time slices"
    },
    "SystemOperationTypeEnum": {
      "PROVISIONING": "Provisioning",
      "RECONCILIACE": "Reconciliation",
      "SYNCHRONIZATION": "Synchronization"
    },
    "AccountTypeEnum": {
      "PERSONAL": "Personal",
      "TECHNICAL": "Technical"
    },
    "ReconciliationMissingAccountActionTypeEnum": {
      "CREATE_ACCOUNT": "Create account",
      "UNLINK": "Remove link",
      "UNLINK_AND_REMOVE_ROLE": "Remove link and appropriate roles",
      "DELETE_ENTITY": "Delete entity",
      "IGNORE": "Ignore"
    },
    "SynchronizationLinkedActionTypeEnum": {
      "UPDATE_ENTITY": "Update entity",
      "UNLINK": "Remove link",
      "UNLINK_AND_REMOVE_ROLE": "Remove link and appropriate roles",
      "UPDATE_ACCOUNT": "Update account",
      "IGNORE": "Ignore"
    },
    "SynchronizationMissingEntityActionTypeEnum": {
      "CREATE_ENTITY": "Create entity",
      "IGNORE": "Ignore"
    },
    "SynchronizationUnlinkedActionTypeEnum": {
      "LINK": "Create link",
      "LINK_AND_UPDATE_ENTITY": "Create link and update entity",
      "LINK_AND_UPDATE_ACCOUNT": "Create link and update account",
      "IGNORE": "Ignore"
    },
    "IcFilterOperationTypeEnum": {
      "EQUAL_TO": "Equals",
      "CONTAINS": "Contains",
      "GREATER_THAN": "Greater than",
      "LESS_THAN": "Less than",
      "ENDS_WITH": "Ends with",
      "STARTS_WITH": "Starts with"
    },
    "SynchronizationActionTypeEnum": {
      "CREATE_ENTITY": "Create new entity",
      "UPDATE_ENTITY": "Update entity",
      "DELETE_ENTITY": "Remove entity",
      "LINK_AND_UPDATE_ENTITY": "Create link and update entity",
      "LINK_AND_UPDATE_ACCOUNT": "Link and update account",
      "UNLINK_AND_REMOVE_ROLE": "Remove link and appropriate roles",
      "LINK": "Create link",
      "UNLINK": "Unlink",
      "CREATE_ACCOUNT": "Create account",
      "UPDATE_ACCOUNT": "Update account",
      "LINKED": "Linked",
      "MISSING_ENTITY": "Missing entity",
      "UNLINKED": "Not linked",
      "MISSING_ACCOUNT": "Missing account",
      "IGNORE": "Ignored",
      "UNKNOWN": "Unknown state"
    },
    "OperationResultTypeEnum": {
      "SUCCESS": "Success",
      "ERROR": "Failed",
      "WF": "Workflow finished",
      "IGNORE": "Ignored",
      "WARNING": "Warning"
    },
    "AttributeMappingStrategyTypeEnum": {
      "SET": "Set value as it is",
      "MERGE": "Merge (only provisioning)",
      "AUTHORITATIVE_MERGE": "Authoritative merge (only provisioning)",
      "CREATE": "Write only on create of the entity",
      "WRITE_IF_NULL": "Write only if target value is null"
    },
    "ProvisioningOperationTypeEnum": {
      "CREATE": "Create",
      "UPDATE": "Update",
      "DELETE": "Delete"
    },
    "TreeAttributeEnum": {
      "CODE": "Code (String)",
      "NAME": "Name (String)",
      "PARENT": "Parent (String)",
      "EXTERNAL_ID": "External ID (String)",
      "DISABLED": "Disabled (boolean)"
    },
    "RoleCatalogueAttributeEnum": {
      "CODE": "Code (String)",
      "NAME": "Name (String)",
      "PARENT": "Parent (String)",
      "DESCRIPTION": "Description (String)",
      "URL": "URL (String)",
      "URL_TITLE": "URL title (String)"
    },
    "RoleAttributeEnum": {
      "NAME": "Name (String)",
      "ROLE_TYPE": "Type of role (String - RoleType)",
      "APPROVE_REMOVE": "Approve remove (Boolean)",
      "PRIORITY": "Priority (Integer)",
      "DESCRIPTION": "Description (String)",
      "DISABLED": "Disabled (boolean)"
    }
  },
  "permission": {
    "group": {
      "ACCOUNT": "Accounts in systems",
      "ROLEACCOUNT": "Role accounts",
      "ROLECATALOGUEACCOUNT": "Role catalogue accounts",
      "SYSTEM": "Connected systems",
      "SYNCHRONIZATION": "Synchronization",
      "TREEACCOUNT": "Tree accounts",
      "IDENTITYACCOUNT": "Identity accounts",
      "CONTRACTACCOUNT": "Accounts for contractual relationships",
      "CONTRACTSLICEACCOUNT": "Accounts for time slices of contractual relationships",
      "PROVISIONINGBREAK": "Provisioning brake"
    }
  },
  "eav": {
    "eu-bcvsolutions-idm-acc-entity-syssystem": {
      "connid-net-tirasa-connid-bundles-db-table-databasetableconnector-net-tirasa-connid-bundles-db-table-2-2-4": {
        "attributes": {
          "quoting": {
            "label": "Name Quoting",
            "help": "Select whether database column names for this resource should be quoted, and the quoting characters. By default, database column names are not quoted (None). For other selections (Single, Double, Back, or Brackets), column names will appear between single quotes, double quotes, back quotes, or brackets in the SQL generated to access the database.",
            "placeholder": ""
          },
          "host": {
            "label": "Host",
            "help": "Enter the name of the host where the database is running.",
            "placeholder": ""
          },
          "port": {
            "label": "Port",
            "help": "Enter the TCP port number the database server is listening on.",
            "placeholder": ""
          },
          "user": {
            "label": "User",
            "help": "Enter the name of the mandatory Database user with permission to account table.",
            "placeholder": ""
          },
          "password": {
            "label": "User Password",
            "help": "Enter a user account password that has permission to access accounts table.",
            "placeholder": ""
          },
          "database": {
            "label": "Database",
            "help": "Enter the name of the database on the database server that contains the table.",
            "placeholder": ""
          },
          "table": {
            "label": "Table",
            "help": "Enter the name of the table in the database that contains the accounts.",
            "placeholder": ""
          },
          "keycolumn": {
            "label": "Key Column",
            "help": "This mandatory column value will be used as the unique identifier for rows in the table.",
            "placeholder": ""
          },
          "passwordcolumn": {
            "label": "Password Column",
            "help": "Enter the name of the column in the table that will hold the password values. If empty, no validation on resource and passwords are activated.",
            "placeholder": ""
          },
          "statuscolumn": {
            "label": "Status Column",
            "help": "Enter the name of the column in the table that will hold the status values. If empty enabled and disabled operation wont be performed.",
            "placeholder": ""
          },
          "disabledstatusvalue": {
            "label": "Disabled Status Value",
            "help": "Enter the value for disabled status. Default is \"false\".",
            "placeholder": ""
          },
          "enabledstatusvalue": {
            "label": "Enabled Status Value",
            "help": "Enter the value for enabled status. Default is \"true\".",
            "placeholder": ""
          },
          "defaultstatusvalue": {
            "label": "Default Status Value",
            "help": "Enter the value for status in case of status not specified. Default is \"true\".",
            "placeholder": ""
          },
          "jdbcdriver": {
            "label": "JDBC Driver",
            "help": "Specify the JDBC Driver class name. Oracle is oracle.jdbc.driver.OracleDriver. MySQL is org.gjt.mm.mysql.Driver. Could be empty if datasource is provided.",
            "placeholder": ""
          },
          "jdbcurltemplate": {
            "label": "JDBC Connection URL",
            "help": "Specify the JDBC Driver Connection URL. Oracle template is jdbc:oracle:thin:@[host]:[port(1521)]:[DB]. MySQL template is jdbc:mysql://[host]:[port(3306)]/[db], for more info, read the JDBC driver documentation. Could be empty if datasource is provided.",
            "placeholder": ""
          },
          "enableemptystring": {
            "label": "Enable writing empty string",
            "help": "Select to enable support for writing an empty strings, instead of a NULL value, in character based columns defined as not-null in the table schema. This option does not influence the way strings are written for Oracle based tables. Default is \"false\".",
            "placeholder": ""
          },
          "rethrowallsqlexceptions": {
            "label": "Rethrow all SQLExceptions",
            "help": "If this is not checked, SQL statements which throw SQLExceptions with a 0 ErrorCode will be have the exception caught and suppressed. Check it to have exceptions with 0 ErrorCodes rethrown. Default is \"true\".",
            "placeholder": ""
          },
          "nativetimestamps": {
            "label": "Native Timestamps ",
            "help": "Select to retrieve Timestamp data type of the columns in java.sql.Timestamp format from the database table. Default is \"false\".",
            "placeholder": ""
          },
          "allnative": {
            "label": "All native",
            "help": "Select to retrieve all data type of the columns in a native format from the database table. Default is \"false\".",
            "placeholder": ""
          },
          "validconnectionquery": {
            "label": "Validate Connection Query",
            "help": "There can be specified the check connection alive query. If empty, default implementation will test it using the switch on/off the autocommit. Some select 1 from dummy table could be more efficient.",
            "placeholder": ""
          },
          "changelogcolumn": {
            "label": "Change Log Column (Sync)",
            "help": "The change log column store the latest change time. Providing this value the Sync capabilities are activated.",
            "placeholder": ""
          },
          "datasource": {
            "label": "Datasource Path",
            "help": "Enter the JDBC Data Source Name/Path to connect to the Oracle server. If specified, connector will only try to connect using Datasource and ignore other resource parameters specified. An the example value is: <CODE>jdbc/SampleDataSourceName</CODE>",
            "placeholder": ""
          },
          "jndiproperties": {
            "label": "Initial JNDI Properties",
            "help": "Could be empty or enter the JDBC JNDI Initial context factory, context provider in a format: key = value.",
            "placeholder": ""
          },
          "cipheralgorithm": {
            "label": "Password cipher algorithm",
            "help": "Cipher algorithm used to encode password before to store it onto the database table. Specify one of the values among CLEARTEXT,AES, MD5, SHA1, SHA256 or a custom implementation identified by its class name. Default is \"CLEARTEXT\".",
            "placeholder": ""
          },
          "pwdencodetouppercase": {
            "label": "Force password encoding to upper case",
            "help": "Force password encoding to upper case. Default is \"false\".",
            "placeholder": ""
          },
          "cipherkey": {
            "label": "Password cipher key",
            "help": "Specify key in case of reversible algorithm.",
            "placeholder": ""
          },
          "pwdencodetolowercase": {
            "label": "Force password encoding to lower case",
            "help": "Force password encoding to lower case. Default is \"false\".",
            "placeholder": ""
          },
          "retrievepassword": {
            "label": "Retrieve password",
            "help": "Specify if password must be retrieved by default. Default is \"false\".",
            "placeholder": ""
          },
          "passwordcharset": {
            "label": "Resource Password Charset",
            "help": "Specify Character set used by resource to encode clear text password. Default is \"UTF-8\".",
            "placeholder": ""
          }
        }
      },
      "connid-net-tirasa-connid-bundles-ldap-ldapconnector-net-tirasa-connid-bundles-ldap-1-5-1": {
        "attributes": {
          "host": {
            "label": "Host",
            "help": "The name or IP address of the host where the LDAP server is running.",
            "placeholder": ""
          },
          "port": {
            "label": "TCP Port",
            "help": "TCP/IP port number used to communicate with the LDAP server. The default is 389.",
            "placeholder": ""
          },
          "ssl": {
            "label": "SSL",
            "help": "Select the check box to connect to the LDAP server using SSL. The default is \"false\".",
            "placeholder": ""
          },
          "failover": {
            "label": "Failover Servers",
            "help": "List all servers that should be used for failover in case the preferred server fails. If the preferred server fails, JNDI will connect to the next available server in the list. List all servers in the form of \"ldap://ldap.example.com:389/\", which follows the standard LDAP v3 URLs described in RFC 2255. Only the host and port parts of the URL are relevant in this setting.",
            "placeholder": ""
          },
          "principal": {
            "label": "Principal",
            "help": "The distinguished name with which to authenticate to the LDAP server.",
            "placeholder": ""
          },
          "credentials": {
            "label": "Password",
            "help": "Password for the principal.",
            "placeholder": ""
          },
          "basecontexts": {
            "label": "Base Contexts",
            "help": "One or more starting points in the LDAP tree that will be used when searching the tree. Searches are performed when discovering users from the LDAP server or when looking for the groups of which a user is a member.",
            "placeholder": ""
          },
          "passwordattribute": {
            "label": "Password Attribute",
            "help": "The name of the LDAP attribute which holds the password. When changing an user's password, the new password is set to this attribute. Default is \"userPassword\".",
            "placeholder": ""
          },
          "accountobjectclasses": {
            "label": "Account Object Classes",
            "help": "The object class or classes that will be used when creating new user objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple object classes. Some object classes may require that you specify all object classes in the class hierarchy.",
            "placeholder": ""
          },
          "accountusernameattributes": {
            "label": "Account User Name Attributes",
            "help": "Attribute or attributes which holds the account's user name. They will be used when authenticating to find the LDAP entry for the user name to authenticate.",
            "placeholder": ""
          },
          "accountsearchfilter": {
            "label": "LDAP Filter for Retrieving Accounts",
            "help": "An optional LDAP filter to control which accounts are returned from the LDAP resource. If no filter is specified, only accounts that include all specified object classes are returned.",
            "placeholder": ""
          },
          "groupobjectclasses": {
            "label": "Group Object Classes",
            "help": "The group class or classes that will be used when creating new group objects in the LDAP tree. When entering more than one object class, each entry should be on its own line; do not use commas or semi-colons to separate multiple group classes. Some group classes may require that you specify all group classes in the class hierarchy.",
            "placeholder": ""
          },
          "groupnameattributes": {
            "label": "Group Name Attributes",
            "help": "Attribute or attributes which holds the group's name. Default is \"cn\".",
            "placeholder": ""
          },
          "groupmemberattribute": {
            "label": "Group Member Attribute",
            "help": "The name of the group attribute that will be updated with the distinguished name of the user when the user is added to the group. Default is \"uniqueMember\".",
            "placeholder": ""
          },
          "maintainldapgroupmembership": {
            "label": "Maintain LDAP Group Membership",
            "help": "When enabled and a user is renamed or deleted, update any LDAP groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership. Default is \"false\".",
            "placeholder": ""
          },
          "maintainposixgroupmembership": {
            "label": "Maintain POSIX Group Membership",
            "help": "When enabled and a user is renamed or deleted, update any POSIX groups to which the user belongs to reflect the new name. Otherwise, the LDAP resource must maintain referential integrity with respect to group membership. Default is \"false\".",
            "placeholder": ""
          },
          "passwordhashalgorithm": {
            "label": "Password Hash Algorithm",
            "help": "Indicates the algorithm that the Identity system should use to hash the password. Currently supported values are SSHA, SHA, SMD5, and MD5. A blank value indicates that the system will not hash passwords. This will cause cleartext passwords to be stored in LDAP unless the LDAP server performs the hash (Netscape Directory Server and iPlanet Directory Server do).",
            "placeholder": ""
          },
          "respectresourcepasswordpolicychangeafterreset": {
            "label": "Respect Resource Password Policy Change-After-Reset",
            "help": "When this resource is specified in a Login Module (i.e., this resource is a pass-through authentication target) and the resource's password policy is configured for change-after-reset, a user whose resource account password has been administratively reset will be required to change that password after successfully authenticating. Default is \"false\".",
            "placeholder": ""
          },
          "usevlvcontrols": {
            "label": "Use VLV Controls",
            "help": "Whether to enforce usage of VLV controls over standard LDAP controls. Default is \"false\".",
            "placeholder": ""
          },
          "vlvsortattribute": {
            "label": "VLV Sort Attribute",
            "help": "Specify the sort attribute to use for VLV indexes on the resource. Default is \"uid\".",
            "placeholder": ""
          },
          "uidattribute": {
            "label": "Uid Attribute",
            "help": "The name of the LDAP attribute which is mapped to the Uid attribute. Default is \"entryUUID\".",
            "placeholder": ""
          },
          "readschema": {
            "label": "Read Schema",
            "help": "If true, the connector will read the schema from the server. If false, the connector will provide a default schema based on the object classes in the configuration. This property must be true in order to use extended object classes. Default is \"true\".",
            "placeholder": ""
          },
          "basecontextstosynchronize": {
            "label": "Base Contexts to Synchronize",
            "help": "One or more starting points in the LDAP tree that will be used to determine if a change should be synchronized. The base contexts attribute will be used to synchronize a change if this property is not set.",
            "placeholder": ""
          },
          "objectclassestosynchronize": {
            "label": "Object Classes to Synchronize",
            "help": "The object classes to synchronize. The change log is for all objects; this filters updates to just the listed object classes. You should not list the superclasses of an object class unless you intend to synchronize objects with any of the superclass values. For example, if only \"inetOrgPerson\" objects should be synchronized, but the superclasses of \"inetOrgPerson\" (\"person\", \"organizationalperson\" and \"top\") should be filtered out, then list only \"inetOrgPerson\" here. All objects in LDAP are subclassed from \"top\". For this reason, you should never list \"top\", otherwise no object would be filtered. Default is \"inetOrgPerson\".",
            "placeholder": ""
          },
          "attributestosynchronize": {
            "label": "Attributes to Synchronize",
            "help": "The names of the attributes to synchronize. This ignores updates from the change log if they do not update any of the named attributes. For example, if only \"department\" is listed, then only changes that affect \"department\" will be processed. All other updates are ignored. If blank (the default), then all changes are processed.",
            "placeholder": ""
          },
          "modifiersnamestofilterout": {
            "label": "Filter Out Changes By",
            "help": "The names (DNs) of directory administrators to filter from the changes. Changes with the attribute \"modifiersName\" that match entries in this list will be filtered out. The standard value is the administrator name used by this adapter, to prevent loops. Entries should be of the format \"cn=Directory Manager\".",
            "placeholder": ""
          },
          "accountsynchronizationfilter": {
            "label": "LDAP Filter for Accounts to Synchronize",
            "help": "An optional LDAP filter for the objects to synchronize. Because the change log is for all objects, this filter updates only objects that match the specified filter. If you specify a filter, an object will be synchronized only if it matches the filter and includes a synchronized object class.",
            "placeholder": ""
          },
          "changelogblocksize": {
            "label": "Change Log Block Size",
            "help": "The number of change log entries to fetch per query. Default is \"100\".",
            "placeholder": ""
          },
          "changenumberattribute": {
            "label": "Change Number Attribute",
            "help": "The name of the change number attribute in the change log entry. Default is \"changeNumber\".",
            "placeholder": ""
          },
          "filterwithorinsteadofand": {
            "label": "Filter with Or Instead of And",
            "help": "Normally the the filter used to fetch change log entries is an and-based filter retrieving an interval of change entries. If this property is set, the filter will or together the required change numbers instead. Default is \"false\".",
            "placeholder": ""
          },
          "removelogentryobjectclassfromfilter": {
            "label": "Remove Log Entry Object Class from Filter",
            "help": "If this property is set (the default), the filter used to fetch change log entries does not contain the \"changeLogEntry\" object class, expecting that there are no entries of other object types in the change log. Default is \"true\".",
            "placeholder": ""
          },
          "synchronizepasswords": {
            "label": "Enable Password Synchronization",
            "help": "If true, the connector will synchronize passwords. The Password Capture Plugin needs to be installed for password synchronization to work. Default is \"false\".",
            "placeholder": ""
          },
          "passwordattributetosynchronize": {
            "label": "Password Attribute to Synchronize",
            "help": "The name of the password attribute to synchronize when performing password synchronization.",
            "placeholder": ""
          },
          "passworddecryptionkey": {
            "label": "Password Decryption Key",
            "help": "The key to decrypt passwords with when performing password synchronization.",
            "placeholder": ""
          },
          "passworddecryptioninitializationvector": {
            "label": "Password Decryption Initialization Vector",
            "help": "The initialization vector to decrypt passwords with when performing password synchronization.",
            "placeholder": ""
          },
          "statusmanagementclass": {
            "label": "Status management class ",
            "help": "Class to be used to manage enabled/disabled status. If no class is specified then identity status management wont be possible.",
            "placeholder": ""
          },
          "retrievepasswordswithsearch": {
            "label": "Retrieve passwords with search",
            "help": "Whether to retrieve user passwords when searching. The default is \"false\".",
            "placeholder": ""
          },
          "dnattribute": {
            "label": "Entry DN attribute name",
            "help": "Entry DN attribute name (default: entryDN)",
            "placeholder": ""
          },
          "groupsearchfilter": {
            "label": "LDAP Filter for Retrieving Groups",
            "help": "An optional LDAP filter to control which groups are returned from the LDAP resource. If no filter is specified, only groups that include all specified object classes are returned.",
            "placeholder": ""
          },
          "readtimeout": {
            "label": "Read Timeout (Milliseconds)",
            "help": "Time to wait for a response to be received. If there is no response within the specified time period, the read attempt will be aborted. Value 0 or less than 0 means there is no limit.",
            "placeholder": ""
          },
          "connecttimeout": {
            "label": "Connection Timeout (Milliseconds)",
            "help": "Time to wait when opening new server connections. Value of 0 means the TCP network timeout will be used, which may be several minutes. Value less than 0 means there is no limit.",
            "placeholder": ""
          }
        }
      },
      "connid-net-tirasa-connid-bundles-db-scriptedsql-scriptedsqlconnector-net-tirasa-connid-bundles-db-scriptedsql-2-2-4": {
        "label": "connId:net.tirasa.connid.bundles.db.scriptedsql.ScriptedSQLConnector:net.tirasa.connid.bundles.db.scriptedsql:2.2.4",
        "help": "",
        "attributes": {
          "quoting": {
            "label": "Name Quoting",
            "help": "Select whether database column names for this resource should be quoted, and the quoting characters. By default, database column names are not quoted (None). For other selections (Single, Double, Back, or Brackets), column names will appear between single quotes, double quotes, back quotes, or brackets in the SQL generated to access the database.",
            "placeholder": ""
          },
          "createscriptfilename": {
            "label": "Create script filename",
            "help": "Path to create script file.",
            "placeholder": ""
          },
          "reloadscriptonexecution": {
            "label": "Reload script on execution",
            "help": "By default scripts are loaded and compiled when connector instance is created. If true script is loaded and compiled every time it is called. Warning use only for testing/debugging, because this can slow application.",
            "placeholder": ""
          },
          "deletescript": {
            "label": "Delete script",
            "help": "Enter script (code) for delete account.",
            "placeholder": ""
          },
          "deletescriptfilename": {
            "label": "Delete script filename",
            "help": "Path to delete script file.",
            "placeholder": ""
          },
          "cleartextpasswordtoscript": {
            "label": "Clear text password to script",
            "help": "Select if password should be passed to scripts in clear text.",
            "placeholder": ""
          },
          "autocommit": {
            "label": "Auto commit",
            "help": "If set to true, each SQL query is treated as a transaction and every change is commited do database right after execution.",
            "placeholder": ""
          },
          "searchscriptfilename": {
            "label": "Search script filename",
            "help": "Path to search script file.",
            "placeholder": ""
          },
          "updatescriptfilename": {
            "label": "Update script filename",
            "help": "Path to update script file.",
            "placeholder": ""
          },
          "scriptinglanguage": {
            "label": "Scripting language",
            "help": "Scripting language, now only value GROOVY is supported.",
            "placeholder": ""
          },
          "schemascriptfilename": {
            "label": "Schema script filename",
            "help": "Path to schema script file.",
            "placeholder": ""
          },
          "syncscript": {
            "label": "Sync script",
            "help": "Enter script (code) for synchronization.",
            "placeholder": ""
          },
          "searchscript": {
            "label": "Search script",
            "help": "Enter script (code) for search.",
            "placeholder": ""
          },
          "updatescript": {
            "label": "Update script",
            "help": "Enter script (code) for update account.",
            "placeholder": ""
          },
          "testscript": {
            "label": "Test script",
            "help": "Enter script (code) for connection test.",
            "placeholder": ""
          },
          "testscriptfilename": {
            "label": "Test script filename",
            "help": "Path to test script file.",
            "placeholder": ""
          },
          "syncscriptfilename": {
            "label": "Sync script filename",
            "help": "Path to sync script file.",
            "placeholder": ""
          },
          "createscript": {
            "label": "Create script",
            "help": "Enter script (code) for create account.",
            "placeholder": ""
          },
          "host": {
            "label": "Host",
            "help": "Enter the name of the host where the database is running.",
            "placeholder": ""
          },
          "port": {
            "label": "Port",
            "help": "Enter the TCP port number the database server is listening on.",
            "placeholder": ""
          },
          "user": {
            "label": "User",
            "help": "Enter the name of the mandatory Database user with permission to account table.",
            "placeholder": ""
          },
          "password": {
            "label": "User Password",
            "help": "Enter a user account that has permission to access accounts table.",
            "placeholder": ""
          },
          "database": {
            "label": "Database",
            "help": "Enter the name of the database on the database server that contains the table.",
            "placeholder": ""
          },
          "jdbcdriver": {
            "label": "JDBC Driver",
            "help": "Specify the JDBC Driver class name. Oracle is oracle.jdbc.driver.OracleDriver. MySQL is org.gjt.mm.mysql.Driver. Could be empty if datasource is provided.",
            "placeholder": ""
          },
          "jdbcurltemplate": {
            "label": "JDBC Connection URL",
            "help": "Specify the JDBC Driver Connection URL. Oracle template is jdbc:oracle:thin:@[host]:[port(1521)]:[DB]. MySQL template is jdbc:mysql://[host]:[port(3306)]/[db], for more info, read the JDBC driver documentation. Could be empty if datasource is provided.",
            "placeholder": ""
          },
          "enableemptystring": {
            "label": "Enable writing empty string",
            "help": "Select to enable support for writing an empty strings, instead of a NULL value, in character based columns defined as not-null in the table schema. This option does not influence the way strings are written for Oracle based tables. By default empty strings are written as a NULL value.",
            "placeholder": ""
          },
          "rethrowallsqlexceptions": {
            "label": "Rethrow all SQLExceptions",
            "help": "If this is not checked, SQL statements which throw SQLExceptions with a 0 ErrorCode will be have the exception caught and suppressed. Check it to have exceptions with 0 ErrorCodes rethrown.",
            "placeholder": ""
          },
          "nativetimestamps": {
            "label": "Native Timestamps",
            "help": "Select to retrieve Timestamp data type of the columns in java.sql.Timestamp format from the database table.",
            "placeholder": ""
          },
          "allnative": {
            "label": "All native",
            "help": "Select to retrieve all data type of the columns in a native format from the database table.",
            "placeholder": ""
          },
          "validconnectionquery": {
            "label": "Validate Connection Query",
            "help": "There can be specified the check connection alive query. If empty, default implementation will test it using the switch on/off the autocommit. Some select 1 from dummy table could be more efficient.",
            "placeholder": ""
          },
          "datasource": {
            "label": "Datasource Path",
            "help": "Enter the JDBC Data Source Name/Path to connect to the Oracle server. If specified, connector will only try to connect using Datasource and ignore other resource parameters specified. The example value is: jdbc/SampleDataSourceName",
            "placeholder": ""
          },
          "jndiproperties": {
            "label": "Initial JNDI Properties",
            "help": "Could be empty or enter the JDBC JNDI Initial context factory, context provider in a format: key = value.",
            "placeholder": ""
          }
        }
      }
    },
    "bulk-action": {
      "role-acm-bulk-action": {
        "icon": "link",
        "label": "Invoke account management",
        "help": "This operation invokes <strong>account management</strong> for each selected role. The account management will be invoke for all users with the role. Account management itself and subsequent provisioning are performed <strong>asynchronously</strong>.  You can see progress of this operations in the <strong>Events</strong> agenda."
      }
    }
  },
  "error": {
    "CONNECTOR_CONFIGURATION_FOR_SYSTEM_NOT_FOUND": {
      "title": "Connector was not selected",
      "message": "Connector for system [{{system}}] is not defined. Please, select connector definition in system settings."
    },
    "PROVISIONING_ATTRIBUTE_MORE_UID": {
      "title": " Unique identifier already exists",
      "message": "System [{{system}}] has already set unique identifier."
    },
    "PROVISIONING_BREAK_OPERATION_EXISTS": {
      "title": "Duplicate brake configuration for the system",
      "message": "Brake configuration for this operation type [{{operationType}}] and system [{{systemId}} already exists."
    },
    "PROVISIONING_ROLE_ATTRIBUTE_MORE_UID": {
      "title": "Unique identifier already exists",
      "message": "Role [{{role}}] and system [{{system}}] have already set unique identifier."
    },
    "PROVISIONING_SYSTEM_DISABLED": {
      "title": "Provisioning of account [{{name}}] wasn't executed",
      "message": "Provisioning of account [{{name}}] in system [{{system}}] wasn't executed. System is configured as inactive."
    },
    "PROVISIONING_SYSTEM_READONLY": {
      "title": "Provisioning of account [{{name}}] not executed",
      "message": "Provisioning of account [{{name}}] in system [{{system}}] wasn't executed. System is in read-only mode."
    },
    "PROVISIONING_PREPARE_ACCOUNT_ATTRIBUTES_FAILED": {
      "title": "Provisioning of account [{{name}}] wasn't executed",
      "message": "Provisioning of account [{{name}}] in system [{{system}}] failed."
    },
    "PROVISIONING_FAILED": {
      "title": "Provisioning of account [{{name}}] wasn't executed",
      "message": "Provisioning of account [{{name}}] in system [{{system}}] failed."
    },
    "PROVISIONING_SUCCEED": {
      "title": "Provisioning of account [{{name}}] executed",
      "message": "Provisioning of account [{{name}}] in system [{{system}}] successfully finished."
    },
    "PROVISIONING_IS_IN_QUEUE": {
      "title": "Provisioning task for account [{{name}}] stored to queue",
      "message": "Account has some unfinished provisioning tasks in queue. New provisioning task for account [{{name}}] in system [{{system}}] was stored to queue."
    },
    "PROVISIONING_IDM_FIELD_NOT_FOUND": {
      "title": "Item for provisioning not found",
      "message": "IdM item [{{field}}] for entity [{{entity}}] was not found!"
    },
    "PROVISIONING_PASSWORD_FIELD_NOT_FOUND": {
      "title": "System [{{system}}] not support change password",
      "message": "Mapping attribute for password (___PASSWORD__) for entity [{{entity}}] was not found!"
    },
    "PROVISIONING_SCHEMA_ATTRIBUTE_IS_NOT_UPDATEABLE": {
      "title": "Provisioning - attribute is not able for update",
      "message": "Attribute [{{attribute}}] for entity [{{entity}}] is not 'able for update'!"
    },
    "PROVISIONING_RESOURCE_ATTRIBUTE_NOT_FOUND": {
      "title": "Provisioning - attribute was not found on connected system",
      "message": "Attribute [{{attribute}}] for entity [{{entity}}] was not found on connected system!"
    },
    "PROVISIONING_PASSWORD_WRONG_TYPE": {
      "title": "Provisioning - password must be GuardedString",
      "message": "Password attribute must be type of GuardedString!"
    },
    "PROVISIONING_ATTRIBUTE_VALUE_WRONG_TYPE": {
      "title": "Provisioning - attribute value is not in correct type",
      "message": "Schema of attribute [{{attribute}}] defines type of [{{schemaAttributeType}}]. But value type is [{{valueType}}]!"
    },
    "PROVISIONING_ATTRIBUTE_TYPE_NOT_FOUND": {
      "title": "Provisioning - attribute value was not found",
      "message": "Attribute schema [{{attribute}}] defines type [{{schemaAttributeType}}]. This type cannot be retrieved!"
    },
    "PROVISIONING_ATTRIBUTE_UID_IS_NOT_STRING": {
      "title": "Provisioning - UID value is not String",
      "message": "Value of UID attribute must be type of String, but given type is [{{uid}}]!"
    },
    "PROVISIONING_ATTRIBUTE_UID_NOT_FOUND": {
      "title": "Provisioning - UID attribute was not found",
      "message": "UID attribute was not found in system [{{system}}]. UID attribute is necessary for provisioning (or sync)!"
    },
    "PROVISIONING_DUPLICATE_ROLE_MAPPING": {
      "title": "Provisioning - More attribute definitions for the same role",
      "message": "There was found more definitions of attributes for same role [{{role}}], in system [{{system}}] and entity type [{{entityType}}]!"
    },
    "PROVISIONING_DIFFERENT_UIDS_FROM_CONNECTOR": {
      "title": "Provisioning - UID attribute not found",
      "message": "Connector returned more different UIDs, for different object classes!"
    },
    "PROVISIONING_MERGE_ATTRIBUTE_IS_NOT_MULTIVALUE": {
      "title": "Provisioning - MERGE is not multivalued",
      "message": "Object [{{object}}]. For MERGE strategy must be attribute [{{attribute}}] multivalued!"
    },
    "PROVISIONING_ATTRIBUTE_STRATEGY_CONFLICT": {
      "title": "Provisioning - Attribute strategy conflict",
      "message": "Strategies [{{strategyParent}}] and [{{strategyConflict}}] are in conflict for attribute [{{attribute}}]!"
    },
    "SYNCHRONIZATION_IS_NOT_ENABLED": {
      "title": "Synchronization is not allowed",
      "message": "Synchronization [{{name}}] is not allowed!"
    },
    "SYNCHRONIZATION_SYSTEM_IS_NOT_ENABLED": {
      "title": "System is disabled",
      "message": "Synchronization [{{name}}] cannot be started, because system [{{system}}] is disabled!"
    },
    "CONFIDENTIAL_VALUE_IS_NOT_GUARDED_STRING": {
      "title": "Confidential attribute is not GuardedString",
      "message": "Confidential attribute [{{property}}] is not type of GuardedString, but it's [{{class}}]!"
    },
    "SYNCHRONIZATION_CORRELATION_TO_MANY_RESULTS": {
      "title": "Synchronization - too many entities was found for correlation attribute",
      "message": "Too many entities was found for correlation attribute [{{correlationAttribute}}] for value [{{value}}]!"
    },
    "SYNCHRONIZATION_TOKEN_ATTRIBUTE_NOT_FOUND": {
      "title": "Synchronization - for synchronization by custom attribute is compulsory attribute Token!",
      "message": "for synchronization by custom attribute is compulsory attribute Token!"
    },
    "SYNCHRONIZATION_IS_RUNNING": {
      "title": "Synchronization already running",
      "message": "Synchronization [{{name}}] already running."
    },
    "SYNCHRONIZATION_NOT_FOUND": {
      "title": "Synchronization not found",
      "message": "Synchronization [{{id}}] was not found."
    },
    "SYNCHRONIZATION_IS_NOT_RUNNING": {
      "title": "Synchronization not running",
      "message": "Synchronization [{{name}}] is not running."
    },
    "SYNCHRONIZATION_TO_MANY_SYSTEM_ENTITY": {
      "title": "Synchronization - more than one record of 'System entity' was found",
      "message": "More than one record of 'System entity was found for UID [{{uid}}]!"
    },
    "SYNCHRONIZATION_FILTER_VALUE_WRONG_TYPE": {
      "title": "Synchronization - filter for synchronization must be type of 'IcFilter'",
      "message": "Filter for synchronization must be type of 'IcFilter', but the value type is [{{type}}]!"
    },
    "SYNCHRONIZATION_ERROR_DURING_SYNC_ITEM": {
      "title": "Synchronization - error during synchronization",
      "message": "During synchronization of UID [{{uid}}], unexpected error has occurred!"
    },
    "SYNCHRONIZATION_TO_MANY_ACC_ACCOUNT": {
      "title": "Synchronization - more than one records of 'AccAccount' found",
      "message": "Found more that one records of 'AccAccount' for the same UID [{{uid}}]!"
    },
    "SYSTEM_MAPPING_DELETE_FAILED_USED_IN_SYNC": {
      "title": "System mapping [{{mapping}}] cannot be removed",
      "message": "System mapping [{{mapping}}] cannot be removed. It's used for synchronization of the same system!"
    },
    "SYSTEM_MAPPING_FOR_ENTITY_EXISTS": {
      "title": "Mapping can not be saved",
      "message": "Provisioning mapping for system [{{system}}] and type of entity  [{{entityType}}] already exists!"
    },
    "ATTRIBUTE_MAPPING_DELETE_FAILED_USED_IN_SYNC": {
      "title": "Attribute [{{attribute}}] cannot be removed",
      "message": "Attribute [{{attribute}}] cannot be removed. It's used for synchronization of the same system!"
    },
    "SYSTEM_DELETE_FAILED_HAS_ENTITIES": {
      "title": "System cannot be removed",
      "message": "System [{{system}}] cannot be removed. There are managed entities in system."
    },
    "SYSTEM_DELETE_FAILED_HAS_OPERATIONS": {
      "title": "System cannot be removed",
      "message": "System [{{system}}] cannot be removed. Active provisioning operations exist for the entity."
    },
    "SYSTEM_DELETE_FAILED_HAS_ACCOUNTS": {
      "title": "System cannot be removed",
      "message": "System [{{system}}] cannot be removed. There are managed accounts in system."
    },
    "SYSTEM_ENTITY_DELETE_FAILED_HAS_OPERATIONS": {
      "title": "Entity in system cannot be removed",
      "message": "Entity [{{uid}}] in system [{{system}}] cannot be removed. Active provisioning operations exist for the entity."
    },
    "REMOTE_SERVER_INVALID_CREDENTIAL": {
      "title": "Bad password for remote connector server",
      "message": "Bad password for remote connector server [{{server}}]"
    },
    "REMOTE_SERVER_NOT_FOUND": {
      "title": "Server not found",
      "message": "Server [{{server}}] not found."
    },
    "REMOTE_SERVER_CANT_CONNECT": {
      "title": "Can't connect to remote connector server",
      "message": "Can't connect to remote connector server [{{server}}]"
    },
    "REMOTE_SERVER_UNEXPECTED_ERROR": {
      "title": "Unexpected error",
      "message": "Unexpected error while connect to server [{{server}}]"
    },
    "CONNECTOR_FORM_DEFINITION_NOT_FOUND": {
      "title": "Form definition for connector not found",
      "message": "Form definition for system not found, please choose connector first."
    },
    "ACCOUNT_CANNOT_BE_DELETED_IS_PROTECTED": {
      "title": "Account [{{uid}}] cannot be deleted!",
      "message": "Account [{{uid}}] cannot be deleted! Is protected!"
    },
    "ACCOUNT_CANNOT_UPDATE_IS_PROTECTED": {
      "title": "Account [{{uid}}] cannot be updated!",
      "message": "Account [{{uid}}] cannot removed from protected state manually!"
    },
    "SYSTEM_MAPPING_TREE_TYPE_DELETE_FAILED": {
      "title": "Tree type cannot be deleted",
      "message": "Tree type [{{treeType}}] is already use in mapping for system [{{system}}]. Remove mapping from the system before deleting."
    },
    "ROLE_SYSTEM_ALREADY_EXISTS": {
      "title": "Duplicate mapping",
      "message": "Mapping for same role [{{role}}] and same system [{{system}}] already exists!"
    },
    "SYNCHRONIZATION_CONFIG_TYPE_CANNOT_BE_CANGED": {
      "title": "Type of sync configuration, cannot be changed!",
      "message": "Type of sync configuration, cannot be changed!"
    },
    "PROVISIONING_BREAK_GLOBAL_CONFIG_DELETE": {
      "title": "Configuration could not be deleted",
      "message": "Configuration: {{name}} is global and can not be deleted."
    },
    "PROVISIONING_BREAK_GLOBAL_CONFIG_SAVE": {
      "title": "Configuration could not be saved",
      "message": "Configuration: {{name}} is global and can not be saved."
    },
    "PROVISIONING_SYSTEM_BLOCKED": {
      "title": "Provisioning of account [{{name}}] wasn't executed",
      "message": "Provisioning of account [{{name}}] in system [{{system}}] was blocked by provisioning brake."
    },
    "SYSTEM_MAPPING_VALIDATION": {
      "title": "Validation of system mapping {{name}} was not successful",
      "message": "Validation of system mapping {{name}} was not successful. Check this mapping settings."
    },
    "PROVISIONING_NOT_SUPPORTS_ENTITY_TYPE": {
      "title": "Provisioning does not supports this type",
      "message": "Provisioning does not supports this entity type [{{entityType}}]"
    },
    "ACCOUNT_CANNOT_BE_READ_FROM_TARGET": {
      "title": "Account cannot be read",
      "message": "Account [{{account}}] cannot be read from the end system [{{system}}]!"
    },
    "PROVISIONING_NEW_PASSWORD_FOR_ACCOUNT": {
      "title": "Password was changed",
      "message": "For object wth UID [{{uid}}] on system [{{system}}] password was set: [{{password}}]."
    },
    "AUTHENTICATION_AGAINST_SYSTEM_FAILED": {
      "title": "Authentication failed",
      "message": "Authentication of user [{{user}}] on system [{{system}}] failed."
    },
    "AUTHENTICATION_AUTHENTICATION_ATTRIBUTE_DONT_SET": {
      "title": "Authentication failed",
      "message": "Can not authenticate to system [{{system}}], because authentication attribute is not set."
    },
    "AUTHENTICATION_USERNAME_DONT_EXISTS": {
      "title": "Authentication failed",
      "message": "User [{{user}}] on system [{{system}}] not found."
    },
    "CONNECTOR_KEY_FOR_SYSTEM_NOT_FOUND": {
      "title": "Key not found",
      "message": "Connector key for system [{{system}}] not found."
    },
    "CONNECTOR_SCHEMA_FOR_SYSTEM_NOT_FOUND": {
      "title": "Schema not found",
      "message": "Connector schema for system [{{system}}] not found."
    },
    "PROVISIONING_SCHEMA_ATTRIBUTE_IS_FOUND": {
      "title": "Schema not found",
      "message": "Schema attribute [{{attr}}] not found."
    },
    "PROVISIONING_SCRIPT_CAN_BE_ACC_CREATED_MUST_RETURN_BOOLEAN": {
      "title": "Wrong return value",
      "message": "Script 'Can be account created' on system [{{system}}] must return 'boolean' value."
    },
    "SYNCHRONIZATION_CORRELATION_BAD_VALUE": {
      "title": "Wrong attribute value",
      "message": "Synchronization - value [{{value}}] for find correlation attribute can't be converted."
    },
    "SYNCHRONIZATION_IDM_FIELD_CANNOT_BE_NULL": {
      "title": "Wrong attribute value",
      "message": "IDM attribute [{{attr}}] can not be null."
    },
    "SYNCHRONIZATION_MAPPED_ATTR_MUST_EXIST": {
      "title": "Mapped attribute not exists",
      "message": "Mapped attribute for IdM field [{{property}}] must exists in system mapping."
    },
    "SYNCHRONIZATION_TREE_ROOT_FILTER_VALUE_WRONG_TYPE": {
      "title": "Wrong filter value",
      "message": "Filter value for tree root is null, but it must be Boolean type."
    },
    "PROVISIONING_GENERATED_UID_IS_NULL": {
      "title": "UID can not be null",
      "message": "Generated UID is null for system [{{system}}]. UID of account must be String type."
    },
    "PROVISIONING_TREE_PARENT_ACCOUNT_NOT_FOUND": {
      "title": "Account not found",
      "message": "Account for parent tree node [{{node}}] not found."
    },
    "PROVISIONING_TREE_TOO_MANY_PARENT_ACCOUNTS": {
      "title": "Too many accounts for parent node",
      "message": "Too many accounts for parent node [{{node}}]. Excepted only one for same system."
    },
    "SYNCHRONIZATION_ATTRIBUTE_NOT_FOUND": {
      "title": "Attribute not found",
      "message": "IDM attribute [{{attr}}] not found."
    },
    "SYNCHRONIZATION_IDM_FIELD_NOT_GET": {
      "title": "Can not get attribute",
      "message": "Can not get IdM attribute [{{attr}}] for entity [{{entity}}]."
    },
    "SYNCHRONIZATION_IDM_FIELD_NOT_SET": {
      "title": "Can not set attribute",
      "message": "Can not set IdM attribute [{{attr}}] for entity [{{entity}}]."
    },
    "SYNCHRONIZATION_TREE_PARENT_TREE_ACCOUNT_NOT_FOUND": {
      "title": "Account not found",
      "message": "No tree account for parent UID: [{{parentUid}}] on system [{{systemId}}] with acc account: [{{parentAccount}}] was found."
    },
    "SYNCHRONIZATION_TREE_PARENT_ACCOUNT_NOT_FOUND": {
      "title": "Account not found",
      "message": "No parent account for parent UID: [{{parentUid}}] on system [{{systemId}}] was found."
    },
    "PROVISIONING_BREAK_RECIPIENT_CONFLICT": {
      "title": "More attributes for recipient",
      "message": "There is setting in role and identity for recipient. Allowed is only single setting."
    },
    "PROVISIONING_DUPLICATE_ATTRIBUTE_MAPPING": {
      "title": "Mapping attribute is duplicated",
      "message": "Schema attribute can be mapped only once (in provisioning mapping)!"
    },
    "SYSTEM_MAPPING_NOT_FOUND": {
      "title": "Cannot find system mapping",
      "message": "Cannot find system mapping on system [{{systemId}}] for object class name [{{objectClassName}}]."
    },
    "SYSTEM_SCHEMA_OBJECT_CLASS_NOT_FOUND": {
      "title": "Cannot find schema object class",
      "message": "Cannot find schema object class [{{objectClassName}}] on system [{{systemId}}]."
    },
    "SYSTEM_ATTRIBUTE_MAPPING_NOT_FOUND": {
      "title": "Cannot find system attribute mapping",
      "message": "Cannot find system attribute mapping for schema [{{schemaAttr}}] on system [{{systemId}}]."
    },
    "SYSTEM_SCHEMA_ATTRIBUTE_NOT_FOUND": {
      "title": "Cannot find schema attribute",
      "message": "Cannot find schema attribute for object class name [{{objectClassName}}] and attribute name [{{attributeName}}]."
    },
    "ROLE_ACCOUNT_NOT_FOUND": {
      "title": "No role account found",
      "message": "No role account found for account id [{{account}}]."
    },
    "ROLE_ACM_BULK_ACTION_NUMBER_OF_IDENTITIES": {
      "message": "Role <strong>{{role}}</strong> contains  <strong class=\"highlight\">{{count}}</strong> user relationships",
      "title": ""
    },
    "ROLE_ACM_BULK_ACTION_NONE_IDENTITIES": {
      "message": "The selected roles do <strong>not</strong> contain any user relationships.",
      "title": ""
    }
  },
  "processor": {
    "identity-save-processor": {
      "title": "Provisioning",
      "description": "Provisioning - identity accounts will be provisioned to target accounts."
    },
    "identity-role-save-provisioning-processor": {
      "title": "Provisioning",
      "description": "Provisioning - identity accounts will be provisioned to target accounts."
    },
    "identity-contract-provisioning-processor": {
      "title": "Provisioning",
      "description": "Provisioning - identity accounts will be provisioned to target accounts."
    },
    "contract-guarantee-save": {
      "title": "Provisioning",
      "description": "Provisioning - identity accounts will be provisioned to target accounts."
    }
  }
}
