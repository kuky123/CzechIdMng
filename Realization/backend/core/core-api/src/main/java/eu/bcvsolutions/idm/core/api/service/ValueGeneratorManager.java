package eu.bcvsolutions.idm.core.api.service;

import java.util.List;
import java.util.Set;

import eu.bcvsolutions.idm.core.api.dto.AbstractDto;
import eu.bcvsolutions.idm.core.api.dto.ValueGeneratorDto;
import eu.bcvsolutions.idm.core.api.script.ScriptEnabled;

/**
 * Manager for generate values
 *
 * @author Ondrej Kopr <kopr@xyxy.cz>
 * @author Radek Tomi≈°ka
 * @since 9.2.0
 */
public interface ValueGeneratorManager extends ScriptEnabled {

	/**
	 * Run generate process with given DTO. Values will be generated by sorted, active generators stored in DB.
	 *
	 * @param dto
	 * @return
	 */
	<DTO extends AbstractDto> DTO generate(DTO dto);
	
	/**
	 * Return all available generators for given entity type.
	 * If parameter entityType is null, return all generators.
	 *
	 * @param dtoType
	 * @return
	 */
	List<ValueGeneratorDto> getAvailableGenerators(Class< ? extends AbstractDto> dtoType);
	
	/**
	 * Return all DTO types which supports generate by registered processors
	 *
	 * @return
	 */
	Set<Class< ? extends AbstractDto>> getSupportedTypes();

	/**
	 * Supports given type
	 *
	 * @param dto
	 * @return
	 */
	boolean supportsGenerating(AbstractDto dto);
}
