<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>eu.bcvsolutions.idm</groupId>
		<artifactId>idm-parent</artifactId>
		<version>9.1.1-SNAPSHOT</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>

	<artifactId>idm-app</artifactId>
	<packaging>war</packaging>
	<name>CzechIdM Application</name>
	<description>CzechIdM web application. Contains application modules with rest endpoints , authentication etc.</description>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>idm-core-impl</artifactId>
			<version>${project.version}</version>
		</dependency>	
	</dependencies>

	<build>
		<finalName>idm-backend</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${buildNumber}</Implementation-Build>
							<Specification-Title>${project.description}</Specification-Title>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>application.properties</exclude>
				</excludes>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>application.properties</include>
				</includes>
			</resource>
		</resources>
	</build>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>default</spring.profiles.active>
			</properties>
		</profile>

		<profile>
			<id>test</id>
			<properties>
				<spring.profiles.active>test</spring.profiles.active>
			</properties>
		</profile>

		<!-- Full application release -->
		<profile>
			<id>release</id>
			<properties>
				<spring.profiles.active>release</spring.profiles.active>
			</properties>

			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-acc</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-example</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-vs</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-rpt-impl</artifactId>
					<version>${project.version}</version>
				</dependency>
			</dependencies>

			<build>
				<finalName>idm</finalName>
				<plugins>
					<!-- remove node_modules, because is there circular folder reference -->
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>clean-node-modules</id>
								<phase>clean</phase>
								<goals>
									<goal>clean</goal>
								</goals>
								<configuration>
									<excludeDefaultDirectories>true</excludeDefaultDirectories>
									<filesets>
										<fileset>
											<directory>../../frontend/czechidm-app/node_modules</directory>
											<includes>
												<include>**</include>
											</includes>
										</fileset>
									</filesets>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>copy-fe-sources</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>target/idm/fe-sources</outputDirectory>
									<resources>
										<resource>
											<directory>../../frontend/czechidm-app</directory>
											<filtering>false</filtering>
											<excludes>
												<exclude>**/dist</exclude>
												<exclude>**/czechidm-modules/**/node_modules/</exclude>
												<exclude>**/node_modules</exclude>
												<exclude>**/.*</exclude>
											</excludes>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-resources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>target/idm</outputDirectory>
									<resources>
										<resource>
											<directory>../../frontend/czechidm-app/dist</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- plugin sequentionaly runs commands which are needed for build of 
						frontend -->
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.0</version>
						<configuration>
							<workingDirectory>../../frontend/czechidm-app</workingDirectory>
							<installDirectory>target</installDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<nodeVersion>v6.4.0</nodeVersion>
									<npmVersion>3.6.0</npmVersion>
								</configuration>
							</execution>
							<!-- script within package.json checks whether node_modules directory 
								and its symlink exist and creates them if they do not exist -->
							<!-- It is better use npm install and gulp install in two different 
								executions othwerwise exists way with npm run install-product -->
							<execution>
								<id>app npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>app gulp install</id>
								<goals>
									<goal>gulp</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>gulp build</id>
								<goals>
									<goal>gulp</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<arguments>build -p ${frontend.profile} -s ${frontend.stage}</arguments>
									<workingDirectory>../../frontend/czechidm-app</workingDirectory>
									<installDirectory>target</installDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>dev</id>
			<!-- Optional modules - could be added without dependency -->
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-acc</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-example</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-vs</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-rpt-impl</artifactId>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>dev-mysql</id>
		</profile>

		<profile>
			<id>dev-mssql</id>
			<!-- Optional modules - could be added without dependency -->
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-acc</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-example</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-vs</artifactId>
					<version>${project.version}</version>
				</dependency>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>idm-rpt-impl</artifactId>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>

		<!-- Due portability of maven build among different OSs we need to distinguish 
			scripts for windows/unix. Profiles are activated automaticaly based on OS -->
		<profile>
			<id>Windows</id>
			<activation>
				<os>
					<family>Windows</family>
				</os>
			</activation>
			<properties>
				<!--TODO make windows script of linux modules-link-or-skip -->
				<script.environment />
			</properties>
		</profile>
		<profile>
			<id>unix</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
				<script.environment>modules-link-or-skip</script.environment>
				<frontend.stage>production</frontend.stage>
				<frontend.profile>default</frontend.profile>
			</properties>
		</profile>
	</profiles>
</project>
